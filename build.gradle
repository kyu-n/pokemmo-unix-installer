plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
}

repositories {
    mavenCentral()
    google()
}

ext {
    imguiVersion = '1.89.0'
}

dependencies {
    implementation "io.github.spair:imgui-java-app:${imguiVersion}"
    implementation 'com.ibm.icu:icu4j:77.1'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

compileJava {
    options.release = 21
}

project.ext.appName = "PokeMMO"
project.ext.mainClassName = "com.pokeemu.unix.UnixInstaller"
project.ext.mainJar = "unix-installer.jar"

tasks.register('createRuntime', Exec) {
    doFirst {
        project.delete(layout.buildDirectory.dir("runtime"))
    }

    String runtimePath = layout.buildDirectory.dir("runtime").get().asFile.absolutePath
    String jlinkPath = "$System.env.JRE_TARGET/bin/jlink"

    workingDir project.projectDir
    commandLine = [
            jlinkPath,
            '--add-modules', 'java.se,java.base,java.desktop,jdk.unsupported,jdk.crypto.ec',
            '--strip-debug',
            '--no-header-files',
            '--no-man-pages',
            '--vm=server',
            '--compress=2',
            '--output', runtimePath
    ]
}

jar {
    archiveFileName = project.mainJar
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
                'Main-Class': project.mainClassName,
                'Multi-Release': 'true'
        )
    }

    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }

    exclude '**/natives-windows/**'
    exclude '**/natives-macos/**'
    exclude '**/natives-freebsd/**'
    exclude '**/*.dll'
    exclude '**/*.dylib'
    exclude '**/windows*/**'
    exclude '**/macos*/**'
    exclude '**/darwin*/**'
}

tasks.register('dist') {
    dependsOn 'clean', 'createRuntime', 'jar'

    group = 'distribution'
    description = 'Creates a complete distribution with runtime and jar'
}

assemble.dependsOn dist