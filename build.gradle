repositories {
    mavenCentral()
    google()
}

apply plugin: "java-library"
apply plugin: "eclipse"
apply plugin: "idea"

ext {
    imguiVersion = '1.89.0'
}

dependencies {
    implementation "io.github.spair:imgui-java-app:1.89.0"
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'org.apache.commons:commons-lang3:3.18.0'
    implementation 'commons-io:commons-io:2.15.1'
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.3'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.5.13'
    implementation 'com.ibm.icu:icu4j:77.1'
}

compileJava {
    options.release = 21
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

project.ext.appName = "PokeMMO"
project.ext.mainClassName = "com.pokeemu.unix.UnixInstaller"
project.ext.mainJar = "unix-installer.jar"

// creates a slim JDK runtime for distribution
task createRuntime(type: Exec) {
    doFirst() {
        project.delete("${buildDir}/runtime")
    }

    String runtimePath = "${buildDir}/runtime"
    String jlinkPath = "$System.env.JRE_TARGET" + "/bin/jlink"

    workingDir project.projectDir
    commandLine = [
            jlinkPath,
            '--add-modules', 'java.se,java.base,java.desktop,jdk.unsupported,jdk.crypto.ec',
            '--strip-debug',
            '--no-header-files',
            '--no-man-pages',
            "--vm=server",
            "--compress=2",
            '--output', runtimePath
    ]
}

jar {
    archiveFileName = project.mainJar

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    manifest {
        attributes(
                'Main-Class': project.mainClassName,
                'Multi-Release': 'true'
        )
    }
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

task dist(type: GradleBuild) {
    buildName "dist"
    startParameter.projectProperties = gradle.startParameter.projectProperties
    tasks = ['clean', 'createRuntime', 'jar']
}

assemble.dependsOn dist